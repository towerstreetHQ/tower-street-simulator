# https://www.playframework.com/documentation/latest/Configuration

play {
  http {
    errorHandler = "io.towerstreet.controllers.JsonErrorHandler"
    secret.key = "towerstreet123456789"

    // For file uppload limit maximal file size + temp file buffer threshold
    parser {
      maxMemoryBuffer = 512k
      maxDiskBuffer = 10M
    }
  }

  // Every 1 minute delete temp files older than X minutes
  temporaryFile {
    reaper {
      enabled = true
      initialDelay = "5 minutes"
      interval = "1 minute"
      olderThan = "5 minutes"
    }
  }

  filters.enabled += "play.filters.cors.CORSFilter"
  filters.cors {
    pathPrefixes = [
      "/test/network",
      "/test/sinks",
      "/test/simulations",
      "/test/resources",
      "/client-info"
    ]
    allowedHttpMethods = ["GET", "POST"]
    allowedHttpHeaders = ["Content-Type", "Access-Control-Allow-Headers", "X-Requested-With"]
  }

  filters.disabled += play.filters.csrf.CSRFFilter

  modules.enabled += "io.towerstreet.attacksimulator.scheduler.TaskModule"
  modules.enabled += "io.towerstreet.attacksimulator.Module"
}

slick {
  dbs {
    default {
      profile = "io.towerstreet.slick.db.TsPostgresProfile$"
      db {
        driver = "org.postgresql.Driver"
        url = "jdbc:postgresql://127.0.0.1/towerstreet_lldb"
        user = "towerstreet"
        password = ""

        // Resolves warning:
        // Having maxConnection > maxThreads can result in deadlocks if transactions or database locks are used.
        maxConnections = 20
      }
    }
  }
}

io.towerstreet {
  // Specification of towerstreet config with database connection overrides
  // Shared configuration file by all TS services from S3 or local file
  config {
    configPath = ""
    dbVariant = "db"
    awsRegion = "eu-central-1"
  }

  attacksimulator = {
    test {
      resources {
        fileFolder = "test-file-resources"
        fileKeyRegex = "^[a-zA-Z0-9-]+$"
      }

      // Don't exceed max permitted size for file sinks
      sinks {
        maxFileSize = ${play.http.parser.maxDiskBuffer}
      }
    }

    auth {
      apiKeyExpiration = "1d"
      apiKeyHeader = "X-Api-Key"
      userCheckDelay = "2s"
      bcryptRounds = 15

      // Set to false to disable auth on local dev environment
      // Should be true in prod!
      authEnabled = true
    }

    scoring {
      // Start scoring right after finishing simulations
      finishedSimulationsScoringEnabled = true

      // How much actors should be spawn to calculate scoring per simulation outcome
      maxConcurrentScoring = 20
      // How much futures top be run in parallel pep single simulation outcome
      calculationConcurrency = 5
      // Simulation outcome will be tried maximally this times
      retriesLimit = 5

      // Calculation will be killed if exceeds this limit
      calculationTimeout = 1m
      cleanCalculationInterval = 2m

      // Parameters for autorestart from DB
      restartEnabled = true
      restartInterval = 1m
      restartDelay = 2m
      restartLimit = 100
    }

    urlTest {
      validTestDelay = 2h
    }
  }
}

// Setups flyway migration config properties
include "migration.conf"

// Includes additional local config
include "secret.conf"